import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class GUICalculator extends JFrame implements ActionListener {
    private JTextField textField;
    private double num1 = 0, num2 = 0, result = 0;
    private char operator = '\u0000';

    public GUICalculator() {
        setTitle("Calculator");
        setSize(350, 450);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);

        textField = new JTextField();
        textField.setBounds(30, 40, 270, 40);
        textField.setEditable(false);
        add(textField);

        String[] buttonLabels = {
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "0", ".", "=", "+"
        };

        int x = 30, y = 100;
        for (int i = 0; i < buttonLabels.length; i++) {
            JButton btn = new JButton(buttonLabels[i]);
            btn.setBounds(x, y, 60, 40);
            btn.addActionListener(this);
            add(btn);
            x += 70;
            if ((i + 1) % 4 == 0) {
                x = 30;
                y += 50;
            }
        }

        JButton clearBtn = new JButton("C");
        clearBtn.setBounds(30, 350, 270, 40);
        clearBtn.addActionListener(this);
        add(clearBtn);

        setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();

        if ((command.charAt(0) >= '0' && command.charAt(0) <= '9') || command.equals(".")) {
            if (command.equals(".") && textField.getText().contains(".")) {
                return;
            }
            textField.setText(textField.getText() + command);
        } 
        else if (command.charAt(0) == 'C') {
            textField.setText("");
            num1 = num2 = result = 0;
            operator = '\u0000';
        } 
        else if (command.charAt(0) == '=') {
            if (operator == '\u0000' || textField.getText().isEmpty()) {
                 return;
            }

            try {
                num2 = Double.parseDouble(textField.getText());
            } catch (NumberFormatException nfe) {
                textField.setText("Error");
                num1 = num2 = result = 0;
                operator = '\u0000';
                return;
            }
            
            switch (operator) {
                case '+': result = num1 + num2; break;
                case '-': result = num1 - num2; break;
                case '*': result = num1 * num2; break;
                case '/': 
                    if (num2 != 0) {
                        result = num1 / num2;
                    } else {
                        textField.setText("Error: Div by Zero");
                        num1 = num2 = result = 0;
                        operator = '\u0000';
                        return;
                    }
                    break;
            }
            
            textField.setText(String.valueOf(result));
            num1 = result;
            operator = '\u0000';
            
        } 
        else {
            if (textField.getText().isEmpty()) {
                if (num1 != 0) {
                    operator = command.charAt(0);
                }
                return;
            }
            
            double currentInput = 0;
            try {
                currentInput = Double.parseDouble(textField.getText());
            } catch (NumberFormatException nfe) {
                 textField.setText("Error");
                 num1 = num2 = result = 0;
                 operator = '\u0000';
                 return;
            }

            if (operator != '\u0000') {
                num2 = currentInput;
                switch (operator) {
                    case '+': result = num1 + num2; break;
                    case '-': result = num1 - num2; break;
                    case '*': result = num1 * num2; break;
                    case '/': 
                        if (num2 != 0) {
                            result = num1 / num2;
                        } else {
                            textField.setText("Error: Div by Zero");
                            num1 = num2 = result = 0;
                            operator = '\u0000';
                            return;
                        }
                        break;
                }
                num1 = result;
                textField.setText(String.valueOf(num1));
            } else {
                num1 = currentInput;
            }
            
            operator = command.charAt(0);
            textField.setText("");
        }
    }

    public static void main(String[] args) {
        new GUICalculator();
    }
}
